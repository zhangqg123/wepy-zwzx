<template>
  <view>
    <SwiperBar :param.sync="param" />
  </view>
    <!--其他统计区域-->
    <!--TODO 目前是外卖模板-->
    <view>

    <!--操作区域-->
    <view class="operation-box">
      <view class="operation-row row-around" >
        <navigator class="column-center" url="../guide/guide_list">
          <image src="/images/home/zw1.png"/>
          <text>办事指南</text>
        </navigator>
        <navigator class="column-center" url="../apply/myApplies">
          <image src="/images/home/zw2.png"/>
          <text>办件查询</text>
        </navigator>
        <navigator class="column-center" url="../apply/myInterviews">
          <image src="/images/home/zw3.png"/>
          <text>咨询投诉</text>
        </navigator>
      </view>

      <view class="hr"></view>

      <view class="row-around">
        <navigator class="operation-row column-center" url="../coupon/list">
          <image src="/images/home/zw4.png"/>
          <text>政府热线</text>
        </navigator>
        <view class="operation-row column-center"  @tap="scan">
          <image src="/images/home/zw5.png"/>
          <text>扫码认证</text>
        </view>
        <navigator class="operation-row column-center" url="{{navUrl}}">
          <image src="/images/home/zw6.png"/>
          <text>公共资源</text>
        </navigator>
      </view>
    </view>
  </view>
  <view class="tab-border" />

</template>


<script>
  import wepy from 'wepy';
//  import api from '../../api/api';
  import zwzx from '../../api/zwzx';
  import base from '../../mixins/base';
  import Event from '../../utils/Event';
  import Tips from '../../utils/Tips';
//  import WxUtils from '../../utils/WxUtils';
  import SwiperBar from '../../components/template/swiper_bar';
  let interval = null;

  export default class HomeIndex extends wepy.page {
    def = {
      param: {
        adImgs: {},
        adUpload: null
      },

      init: false,
      show: false,
      navUrl: '../manusl/user_management?type=home'
//      limit: {}
    };
    data = {...this.def};
    async onLoad (option) {
      try {
        const res=await wepy.login();
//        this.userInfo = await wepy.getUserInfo();
        wepy.$instance.globalData.resCode=res.code;
        this.show = true;
        const data = await zwzx.queryAllAdImages();
        if (data.success == true) {
          this.param.adImgs = data.obj;
        } else {
          Tips.error(data.msg);
        }
        const upload = data.apiAdUpload;

        this.param.adUpload = upload;
        Event.listen(Event.USER_LOGOUT, this.clear.bind(this), this);
      } catch (e) {
        this.tips(e.message);
      } finally {
        this.loaded();
      }
    };
/*    async onShow() {
      console.info("header",wepy.$instance.globalData.header);
    }
*/
    clear() {
      this.init = false;
    }
    onHide() {
      this.show = false;
      clearInterval(interval);
    }
    onUnload() {
      // 清理定时器
      clearInterval(interval);
    }
//    async reload() {
//      Tips.setLoading();
      // 数据展现
//      const [today, month, order] = await Promise.all([count.today(), count.month(), count.order()]);
//      this.today = today;
//      this.month = month;
//      this.order = order;
//      this.loaded();
      // 差异比对
//      if (this.show) {
//        this.compareOrderStatus(order);
//     }
      // 写入缓存
//      wepy.setStorageSync('order_count', order);
//    }
/*    compareOrderStatus(curStatus) {
      const preStatus = wepy.getStorageSync('order_count');
      const auto = this.shop.autoOrder;
      if (preStatus == '') {
        return;
      }
      // 手工接单比较待接单订单，自动接单比较已接单订单
      let hasNewOrder = auto == 0 ? (preStatus.n2 < curStatus.n2) : (preStatus.n9 < curStatus.n9 || preStatus.n3 < curStatus.n3);
      // 订单数量比较
      if (hasNewOrder) {
        // 新订单通知
        wepy.playBackgroundAudio({
          dataUrl: 'http://img.leshare.shop/leshare/new_order.mp3'
        });
        Tips.modal('您有新的订单，请及时处理');
      }
    }

    async onPullDownRefresh () {
      await this.reload();
      wepy.stopPullDownRefresh();
    }
*/
    onShareAppMessage () {
      const title = '乐享商家助手';
      const url = '/pages/home/index';
      return Tips.share(title, url, title);
    }
    methods = {
      // 客服
      service() {
        this.$root.$navigate('../customer/index');
      },
      order(status) {
        this.$preload('status', status);
        Event.emit(Event.ORDER_TAB_UPDATE, status);
      },
      async scan() {
        try {
          const data = await wepy.scanCode();
          Tips.loading('扫描中');
          console.info(data);
          const {errMsg, path, result} = data;
          if (errMsg != 'scanCode:ok') {
            Tips.alert('扫描失败请重试');
            return;
          }
          // 会员卡的情况
          const memberUrlPrefix = 'pages/vip/vip_scan';
          const isMember = path && path.indexOf(memberUrlPrefix) >= 0;
          if (isMember) {
            this.$navigate('/' + path);
            return;
          }
          const isCoupon = path == null && result != null && result.indexOf('#') >= 0;
          if (isCoupon) {
            this.$navigate(`/pages/coupon/scan?scan=${result}`);
            return;
          }
          Tips.alert('未知二维码');
        } finally {
          Tips.loaded();
        }
      }
    };
    components = {
      SwiperBar: SwiperBar
    };
    config = {
//      enablePullDownRefresh: true,
      navigationBarTitleText: '政务中心'
    };
    mixins = [base];
  }
</script>

<style lang="scss">
  @import "../../styles/variable";

  .shop-box {
    background-color: $color-primary;
    padding-left: 20rpx;
    text{color: white;}
  }

  /*今日区域*/
  .today-box{
    background-color: $color-primary;
    padding: 40rpx 0;

    text{color: white;}

    .today-price-text{
      font-size: 80rpx;
      margin-top: 40rpx;
      margin-bottom: 40rpx;
    }

    .vr{
      width:1px;
      height: 30rpx;
      background-color: white;
    }

    .today-kpi-box .column-center{
      width: 250rpx;
    }
  }

  /*统计区域*/
  .count-box{
    padding: 20rpx 0;
    text{font-size: $text-lg}
    border-bottom: $border;

    .vr{
      width: 1px;
      height: 100rpx;
      background-color: $color-border;
    }

    .count-value{
      font-size: $text-xl;
      margin-bottom: 20rpx;
    }

    .count-item{
      width: 250rpx;
    }
  }

  /*操作区域*/
  .operation-box{
    background-color: #FFFCFC;
    margin-bottom: 20rpx;
    padding-top:35rpx;
    padding-bottom: 35rpx;
    border-bottom: $border;

    image{
      height: 90rpx;
      width: 90rpx;
    }

    .hr{
      height: 40rpx;
      width: 100%;
    }

    .operation-row{
      text{
        color: $color-weak;
        margin-top: 10rpx;
      }
    }
  }

</style>
